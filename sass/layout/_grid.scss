.row {
    max-width: $grid-width;

    margin: 0 auto;
    //background-color: #eee;

    // Give all the elements a margin-bottom except the last child.
    &:not(:last-child) {
        margin-bottom: $guttter-vertical;
        // reduce the margin at the bottom
        @include respond(tabPort) {
            margin-bottom: $guttter-vertical-small;
        }
    }

    @include respond(tabPort) {
            max-width: 50rem;
            padding: 0 3rem; // a little breathing around columns in the row
        }

    // clearfix hack
    @include clearfix;

    // Using an attribute selector to target properties similar to all columns.
    // I want all the columns that start with col-, hence ^
    [class^="col-"] {
        //background-color: orangered;
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
            // Since they'll be positioned from top to bottom we don't need margin-right in the tablet portrait
            @include respond(tabPort) {
                margin-right: 0;
                margin-bottom: $guttter-vertical-small;
            }
        }

        // Each column should act as a block element
        @include respond(tabPort) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * (#{$gutter-horizontal}));
    }
}