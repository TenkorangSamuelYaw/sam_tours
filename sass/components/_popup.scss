.popup {
    position: fixed;
    width: 100%;
    height: 100vh;
    background-color: rgba($color-black, .85);
    top: 0;
    left: 0;
    z-index: 4000;
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    &__content {
        @include absoluteCenter; // mixin to put elements at the centre of webpage 
        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
        display: table;
        overflow: hidden;
        transform: translate(-50%, -50%) scale(.25); // reduce the size a by half or quarter
        opacity: 0; // and hide it until the popup becomes the target
        transition: all .4s .2s; // delay .2s before fading in content. That will be .1s before popup trnasition ends.
    }

    &__left {
        width: 33.333333333%;
        display: table-cell; // FIXME table-cell gives them the same height, but the parent display must be set to display. 
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__right {
        width: 66.666666667%;
        display: table-cell; // FIXME table-cell gives them the same height, but the parent display must be set to display.
        vertical-align: middle; // aligns content in the middle
        padding: 3rem 5rem;
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;
        column-count: 2; // creates two columns
        column-gap: 4rem; // space between columns. by default it's 1em and 1em = 14px or 1.4rem because of the current font(text)
        column-rule: 1px solid $color-grey-light-2;
        hyphens: auto; // automatically insert hyphens where necessary in the paragraph
    }

    &__close {
        &:link,
        &:visited {
            color: $color-gray-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            line-height: 1;
            transition: all .2s;
        }

        &:hover {color: $primary-color;}
    }

    // popup div is the target, and we show it. Remember target is a pseudo element.
    &:target {
        opacity: 1;
        visibility: visible;
    }

    // when the popup becomes the target, style the popup__content
    &:target &__content {
        transform: translate(-50%, -50%) scale(1); // scale it back to 1
        opacity: 1; // show it now
    }

}